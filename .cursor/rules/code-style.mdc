---
description: Code style and development guidelines for OSM Batching Tool
author: System
applyTo: Always
---

# Code Style Guidelines

## Rust Code Standards
- Use structured logging with `tracing` crate
- Comprehensive error handling with `anyhow`
- Async/await for all I/O operations
- Clear separation between gRPC layer and processing logic
- Follow Rust naming conventions (snake_case for functions, PascalCase for types)

## Error Handling
- Always use `Result<T, E>` for fallible operations
- Propagate errors with `?` operator where appropriate
- Log errors with context using `tracing::error!`
- Return meaningful error messages to gRPC clients

## Async Patterns
- Use `tokio::spawn` for background tasks
- Implement proper cancellation handling
- Use streaming for large file operations
- Log progress for long-running operations

## Dependencies
- External: Requires `osmium-tool` for PBF to XML conversion
- Core: tokio, tonic, prost, quick-xml, reqwest, flate2
- The project is self-contained Rust - no Python dependencies